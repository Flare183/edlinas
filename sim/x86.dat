# Architecture Names  ARCHNAME$(ARCH.DIM)
086,186,286,386,486SX,486,586,586MMX
# 52 Registers including parts.  REGISTER.LIST$(N.REGISTERS)
EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI,AX,CX,DX,BX,SP,BP,SI,DI
AL,CL,DL,BL,AH,CH,DH,BH
ES,CS,SS,DS,FS,GS,LDT,TSS
DR0,DR1,DR2,DR3,DR4,DR5,DR6,DR7
TR0,TR1,TR2,TR3,TR4,TR5,TR6,TR7
CR0,CR1,CR2,CR3,CR4
# IMUL takes 1 2 or 3 operands 
#   while RET RETF RETN each take either one or no operands.
#   The comma count is used to increment the index in these
#       exceptional cases.
#
#  Mnemonics.      DIRECTIVE.LIST$(N.DIRECTIVES)
#
.=,.equ,.rodata,.globl,.data,.text,.db,.dw,.dd,.486sx,.386,.286,.086
#
#                  MNEMONIC.LIST$(N.MNEMONICS)
#
# 22 Binary mnemonics.    see N.BINOPS
ADD,2,OR,2,ADC,2,SBB,2,AND,2,SUB,2,XOR,2,CMP,2,MOV,2,ROL,2,ROR,2,RCL,2,RCR,2
SHL,2,SHR,2,LDS,2,SAR,2,SAL,2
XCHG,2,TEST,2,IN,2,OUT,2,LES,2,LEA,2
#
# 26 Unary mnemonics. 
# Conditional jumps and sets have place holding INs mixed in so the index can
# be used as an operation code.
JO,1,JNO,1,JB,1,JAE,1,JE,1,JNE,1,JBE,1,JA,1,JS,1,JNS,1,JP,1,JNP,1,JL,1,JGE,1,JLE,1,JG,1
INC,1,DEC,1,JNAE,1,JNB,1,JZ,1,JNZ,1,JNA,1,JNBE,1,IN,1,IN,1,IN,1,IN,1,JNGE,1,JNL,1,JNG,1,JNLE,1
NOT,1,NEG,1,JC,1,JNC,1,PUSH,1,POP,1,CALL,1,RET,0,RET,1,RETF,0,RETF,1,RETN,0,RETF,1,INT,1
MUL,1,DIV,1,IDIV,1,LOOP,1,LOOPZ,1,LOOPNZ,1,LOOPE,1,LOOPNE,1,JCXZ,1,JECXZ,1,JMP,1,JMPF,1,JMPF,2,CALLF,1,CALLF,2
# 7 Stand alone Mnemonics  
AAA,0,AAD,0,AAM,0,AAS,0,DAA,0,DAS,0,NOP,0,HLT,0,CLC,0,STC,0,CMC,0,CLD,0,CLI,0,STD,0,STI,0,INTO,0
IRET,0,IRETD,0,LAHF,0,POPF,0,POPFD,0,POPA,0,POPAD,0,PUSHF,0,PUSHFD,0,PUSHA,0,PUSHAD,0,SAHF,0,WAIT,0
CBW,0,CWD,0,XLATB,0
INSB,0,INSW,0,INSD,0,OUTSB,0,OUTSW,0,OUTSD,0
CMPSB,0,CMPSW,0,CMPSD,0,MOVSB,0,MOVSD,0,MOVSW,0
SCASB,0,SCASW,0,SCASD,0,STOSB,0,STOSW,0,STOSD,0
LODSB,0,LODSW,0,LODSD,0
#
#
IMUL,1,IMUL,2,IMUL,3
#
FLAG,286
LGDT,1,LIDT,1,LLDT,1,LTR,1,STR,1,SLDT,1,SGDT,1,SIDT,1,LMSW,1,SMSW,1
VERR,1,VERW,1,LEAVE,0
ARPL,2,LAR,2,LSL,2,BOUND,2,ENTER,2
#
FLAG,386
BSF,2,BSR,2,BT,2,BTS,2,BTR,2,BTC,2,MOVZX,2,MOVSX,2,CWDE,0,CDQ,0
SETO,1,SETNO,1,SETB,1,SETAE,1,SETE,1,SETNE,1,SETBE,1,SETA,1,SETS,1,SETNS,1,SETP,1,SETNP,1,SETL,1,SETGE,1,SETLE,1,SETG,1
IN,1,IN,1,SETNAE,1,SETNB,1,SETZ,1,SETNZ,1,SETNA,1,SETNBE,1,IN,1,IN,1,IN,1,IN,1,SETNGE,1,SETNL,1,SETNG,1,SETNLE,1
SHLD,3,SHRD,3,LFS,2,LGS,2,LSS,2,CLTS,0
FLAG,486
XADD,2,CMPXCHG,2,INVLPG,0,WBINVD,0,BSWAP,1,INVLPG,1,INVD,0
FLAG, 500
#       Floating point instructions go here
FLAG, 600
# These are the additional pentium instructions
CMPXCHG8B,1,CPUID,0,RDTSC,0,RDMSR,0,WRMSR,0
FLAG, 700
# MMX instructions go next
